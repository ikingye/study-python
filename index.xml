<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>首页 on Python 学习笔记</title><link>https://kingye.me/study-python/</link><description>Recent content in 首页 on Python 学习笔记</description><generator>Hugo</generator><language>en</language><atom:link href="https://kingye.me/study-python/index.xml" rel="self" type="application/rss+xml"/><item><title>包管理</title><link>https://kingye.me/study-python/docs/basic/other/package/manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/package/manage/</guid><description>&lt;h1 id="python-包管理">
 Python 包管理
 &lt;a class="anchor" href="#python-%e5%8c%85%e7%ae%a1%e7%90%86">#&lt;/a>
&lt;/h1>
&lt;h2 id="pip">
 pip
 &lt;a class="anchor" href="#pip">#&lt;/a>
&lt;/h2>
&lt;h3 id="加速">
 加速
 &lt;a class="anchor" href="#%e5%8a%a0%e9%80%9f">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>mkdir -p ~/.config/pip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cat &lt;span style="color:#e6db74">&amp;lt;&amp;lt; EOF &amp;gt; ~/.config/pip/pip.conf
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">[global]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">index-url = https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">extra-index-url = https://mirrors.aliyun.com/pypi/simple https://pypi.doubanio.com/simple https://mirrors.tuna.tsinghua.edu.cn
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>版本管理</title><link>https://kingye.me/study-python/docs/basic/other/version/manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/version/manage/</guid><description>&lt;h1 id="python-版本管理">
 Python 版本管理
 &lt;a class="anchor" href="#python-%e7%89%88%e6%9c%ac%e7%ae%a1%e7%90%86">#&lt;/a>
&lt;/h1>
&lt;h2 id="pyenv">
 pyenv
 &lt;a class="anchor" href="#pyenv">#&lt;/a>
&lt;/h2>
&lt;h3 id="pyenv-加速">
 pyenv 加速
 &lt;a class="anchor" href="#pyenv-%e5%8a%a0%e9%80%9f">#&lt;/a>
&lt;/h3>
&lt;p>在 &lt;code>.zshrc&lt;/code> 添加&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> pyenvinstall &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> wget -c https://registry.npmmirror.com/-/binary/python/$@/Python-$@.tar.xz -P ~/.pyenv/cache/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pyenv install $@
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>执行 &lt;code>zsh&lt;/code> 使配置生效，
之后即可这样安装：
&lt;code>pyenvinstall 3.8.2&lt;/code>&lt;/p>
&lt;h3 id="pyenv-基础命令">
 pyenv 基础命令
 &lt;a class="anchor" href="#pyenv-%e5%9f%ba%e7%a1%80%e5%91%bd%e4%bb%a4">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># List all available versions&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pyenv install -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 更新&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pyenv update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew update &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> brew upgrade pyenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="pyenv-update">
 pyenv update
 &lt;a class="anchor" href="#pyenv-update">#&lt;/a>
&lt;/h4>
&lt;p>&lt;a href="https://github.com/pyenv/pyenv-update">pyenv/pyenv-update&lt;/a> &lt;img src="https://img.shields.io/github/stars/pyenv/pyenv-update.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/pyenv/pyenv-update.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/pyenv/pyenv-update.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/pyenv/pyenv-update.svg" alt="Last commit" />&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git clone https://github.com/pyenv/pyenv-update.git &lt;span style="color:#66d9ef">$(&lt;/span>pyenv root&lt;span style="color:#66d9ef">)&lt;/span>/plugins/pyenv-update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pyenv update
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="pyenv-global-382-2717">
 pyenv global 3.8.2 2.7.17
 &lt;a class="anchor" href="#pyenv-global-382-2717">#&lt;/a>
&lt;/h4>
&lt;p>set by &lt;code>~/.pyenv/version&lt;/code>&lt;/p></description></item><item><title>4.1 教程</title><link>https://kingye.me/study-python/docs/appendix/tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/appendix/tutorial/</guid><description>&lt;h1 id="教程">
 教程
 &lt;a class="anchor" href="#%e6%95%99%e7%a8%8b">#&lt;/a>
&lt;/h1>
&lt;h2 id="基础">
 基础
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80">#&lt;/a>
&lt;/h2>
&lt;h3 id="satwikkansalwtfpythonhttpsgithubcomsatwikkansalwtfpython-github-starshttpsimgshieldsiogithubstarssatwikkansalwtfpythonsvg-languagehttpsimgshieldsiogithublanguagestopsatwikkansalwtfpythonsvg-last-taghttpsimgshieldsiogithubvtagsatwikkansalwtfpythonsvgsortsemver-last-commithttpsimgshieldsiogithublast-commitsatwikkansalwtfpythonsvg">
 &lt;a href="https://github.com/satwikkansal/wtfpython">satwikkansal/wtfpython&lt;/a> &lt;img src="https://img.shields.io/github/stars/satwikkansal/wtfpython.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/satwikkansal/wtfpython.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/satwikkansal/wtfpython.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/satwikkansal/wtfpython.svg" alt="Last commit" />
 &lt;a class="anchor" href="#satwikkansalwtfpythonhttpsgithubcomsatwikkansalwtfpython-github-starshttpsimgshieldsiogithubstarssatwikkansalwtfpythonsvg-languagehttpsimgshieldsiogithublanguagestopsatwikkansalwtfpythonsvg-last-taghttpsimgshieldsiogithubvtagsatwikkansalwtfpythonsvgsortsemver-last-commithttpsimgshieldsiogithublast-commitsatwikkansalwtfpythonsvg">#&lt;/a>
&lt;/h3>
&lt;p>&lt;a href="https://github.com/leisurelicht/wtfpython-cn">leisurelicht/wtfpython-cn&lt;/a> &lt;img src="https://img.shields.io/github/stars/leisurelicht/wtfpython-cn.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/leisurelicht/wtfpython-cn.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/leisurelicht/wtfpython-cn.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/leisurelicht/wtfpython-cn.svg" alt="Last commit" />&lt;/p>
&lt;p>一些有趣且鲜为人知的 Python 特性&lt;/p>
&lt;h3 id="gto76python-cheatsheethttpsgithubcomgto76python-cheatsheet-github-starshttpsimgshieldsiogithubstarsgto76python-cheatsheetsvg-languagehttpsimgshieldsiogithublanguagestopgto76python-cheatsheetsvg-last-taghttpsimgshieldsiogithubvtaggto76python-cheatsheetsvgsortsemver-last-commithttpsimgshieldsiogithublast-commitgto76python-cheatsheetsvg">
 &lt;a href="https://github.com/gto76/python-cheatsheet">gto76/python-cheatsheet&lt;/a> &lt;img src="https://img.shields.io/github/stars/gto76/python-cheatsheet.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/languages/top/gto76/python-cheatsheet.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/gto76/python-cheatsheet.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/gto76/python-cheatsheet.svg" alt="Last commit" />
 &lt;a class="anchor" href="#gto76python-cheatsheethttpsgithubcomgto76python-cheatsheet-github-starshttpsimgshieldsiogithubstarsgto76python-cheatsheetsvg-languagehttpsimgshieldsiogithublanguagestopgto76python-cheatsheetsvg-last-taghttpsimgshieldsiogithubvtaggto76python-cheatsheetsvgsortsemver-last-commithttpsimgshieldsiogithublast-commitgto76python-cheatsheetsvg">#&lt;/a>
&lt;/h3>
&lt;p>Comprehensive Python Cheatsheet&lt;/p>
&lt;hr>
&lt;h3 id="bookyidao620cpython3-cookbookhttpsgithubcomyidao620cpython3-cookbook-github-starshttpsimgshieldsiogithubstarsyidao620cpython3-cookbooksvg">
 (book)&lt;a href="https://github.com/yidao620c/python3-cookbook">yidao620c/python3-cookbook&lt;/a> &lt;img src="https://img.shields.io/github/stars/yidao620c/python3-cookbook.svg" alt="Github stars" />
 &lt;a class="anchor" href="#bookyidao620cpython3-cookbookhttpsgithubcomyidao620cpython3-cookbook-github-starshttpsimgshieldsiogithubstarsyidao620cpython3-cookbooksvg">#&lt;/a>
&lt;/h3>
&lt;p>《Python Cookbook》 3rd Edition 翻译&lt;/p>
&lt;hr>
&lt;hr>
&lt;h2 id="进阶">
 进阶
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6">#&lt;/a>
&lt;/h2>
&lt;h3 id="jakevdppythondatasciencehandbookhttpsgithubcomjakevdppythondatasciencehandbook-github-starshttpsimgshieldsiogithubstarsjakevdppythondatasciencehandbooksvg">
 &lt;a href="https://github.com/jakevdp/PythonDataScienceHandbook">jakevdp/PythonDataScienceHandbook&lt;/a> &lt;img src="https://img.shields.io/github/stars/jakevdp/PythonDataScienceHandbook.svg" alt="Github stars" />
 &lt;a class="anchor" href="#jakevdppythondatasciencehandbookhttpsgithubcomjakevdppythondatasciencehandbook-github-starshttpsimgshieldsiogithubstarsjakevdppythondatasciencehandbooksvg">#&lt;/a>
&lt;/h3>
&lt;p>Python Data Science Handbook: full text in Jupyter Notebooks&lt;/p></description></item><item><title>4.2 面试题</title><link>https://kingye.me/study-python/docs/appendix/interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/appendix/interview/</guid><description>&lt;h1 id="面试题">
 面试题
 &lt;a class="anchor" href="#%e9%9d%a2%e8%af%95%e9%a2%98">#&lt;/a>
&lt;/h1>
&lt;p>参考：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.zhihu.com/question/33398583">如何面试 Python 后端工程师？&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="基础题">
 基础题
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e9%a2%98">#&lt;/a>
&lt;/h2>
&lt;h3 id="数据结构">
 数据结构
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84">#&lt;/a>
&lt;/h3>
&lt;h4 id="元组是不是真的不可变">
 元组是不是真的不可变？
 &lt;a class="anchor" href="#%e5%85%83%e7%bb%84%e6%98%af%e4%b8%8d%e6%98%af%e7%9c%9f%e7%9a%84%e4%b8%8d%e5%8f%af%e5%8f%98">#&lt;/a>
&lt;/h4>
&lt;p>tuple 的每个元素，指向永远不变。&lt;/p>
&lt;p>要创建一个内容也不变的 tuple 怎么做？&lt;/p>
&lt;p>必须保证 tuple 的每一个元素本身也不能变。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># “可变的” tuple：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; t &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;b&amp;#39;&lt;/span>, &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;A&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;B&amp;#39;&lt;/span>&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; t&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">][&lt;/span>0&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;X&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; t&lt;span style="color:#f92672">[&lt;/span>2&lt;span style="color:#f92672">][&lt;/span>1&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Y&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; t
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#39;a&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;b&amp;#39;&lt;/span>, &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;X&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Y&amp;#39;&lt;/span>&lt;span style="color:#f92672">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;hr>
&lt;h4 id="迭代器-vs-生成器">
 迭代器 vs 生成器
 &lt;a class="anchor" href="#%e8%bf%ad%e4%bb%a3%e5%99%a8-vs-%e7%94%9f%e6%88%90%e5%99%a8">#&lt;/a>
&lt;/h4>
&lt;h5 id="迭代器">
 迭代器
 &lt;a class="anchor" href="#%e8%bf%ad%e4%bb%a3%e5%99%a8">#&lt;/a>
&lt;/h5>
&lt;p>把一个类作为一个&lt;strong>迭代器&lt;/strong>使用需要在类中实现两个方法 &lt;code>__iter__()&lt;/code> 与 &lt;code>__next__()&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; list&lt;span style="color:#f92672">=[&lt;/span>1,2,3,4&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; it &lt;span style="color:#f92672">=&lt;/span> iter&lt;span style="color:#f92672">(&lt;/span>list&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#75715e"># 创建迭代器对象&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; print &lt;span style="color:#f92672">(&lt;/span>next&lt;span style="color:#f92672">(&lt;/span>it&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#75715e"># 输出迭代器的下一个元素&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt; print &lt;span style="color:#f92672">(&lt;/span>next&lt;span style="color:#f92672">(&lt;/span>it&lt;span style="color:#f92672">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h5 id="生成器">
 生成器
 &lt;a class="anchor" href="#%e7%94%9f%e6%88%90%e5%99%a8">#&lt;/a>
&lt;/h5>
&lt;p>在 Python 中，使用了 yield 的函数被称为生成器（generator）。&lt;/p></description></item><item><title>内建函数</title><link>https://kingye.me/study-python/docs/basic/grammar/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/builtin/</guid><description>&lt;h1 id="内建函数">
 内建函数
 &lt;a class="anchor" href="#%e5%86%85%e5%bb%ba%e5%87%bd%e6%95%b0">#&lt;/a>
&lt;/h1>
&lt;h2 id="all">
 all
 &lt;a class="anchor" href="#all">#&lt;/a>
&lt;/h2>
&lt;p>判断给定的可迭代参数 iterable 中的所有元素是否都为 TRUE&lt;/p>
&lt;h2 id="any">
 any
 &lt;a class="anchor" href="#any">#&lt;/a>
&lt;/h2>
&lt;p>判断给定的可迭代参数 iterable 全为 False，则返回 False，如果有一个为 True，则返回 True&lt;/p>
&lt;p>元素除了是 0、空、FALSE 外都算 TRUE。&lt;/p>
&lt;h2 id="basestring">
 basestring
 &lt;a class="anchor" href="#basestring">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>isinstance(obj, basestring)&lt;/code> 等价于 &lt;code>isinstance(obj, (str, unicode))&lt;/code>&lt;/p>
&lt;blockquote class="book-hint warning">
 python3 已经没有 basestring 类型，用 str 代替了 basestring
&lt;/blockquote>

&lt;h2 id="enumerate">
 enumerate
 &lt;a class="anchor" href="#enumerate">#&lt;/a>
&lt;/h2>
&lt;p>将一个可遍历的数据对象 (如列表、元组或字符串) 组合为一个索引序列，同时列出数据和数据下标&lt;/p>
&lt;p>&lt;code>enumerate(sequence, [start=0])&lt;/code>&lt;/p>
&lt;h2 id="eval">
 eval
 &lt;a class="anchor" href="#eval">#&lt;/a>
&lt;/h2>
&lt;p>执行一个字符串表达式，并返回表达式的值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>eval(&lt;span style="color:#e6db74">&amp;#39;3 * x&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eval(&lt;span style="color:#e6db74">&amp;#39;pow(2,2)&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="isinstance">
 isinstance
 &lt;a class="anchor" href="#isinstance">#&lt;/a>
&lt;/h2>
&lt;p>判断一个对象是否是一个已知的类型&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>isinstance&lt;span style="color:#f92672">()&lt;/span> 与 type&lt;span style="color:#f92672">()&lt;/span> 区别：
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>type&lt;span style="color:#f92672">()&lt;/span> 不会认为子类是一种父类类型，不考虑继承关系。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>isinstance&lt;span style="color:#f92672">()&lt;/span> 会认为子类是一种父类类型，考虑继承关系。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>如果要判断两个类型是否相同推荐使用 isinstance&lt;span style="color:#f92672">()&lt;/span>。
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="pow">
 pow
 &lt;a class="anchor" href="#pow">#&lt;/a>
&lt;/h2>
&lt;p>&lt;code>pow(x, y[, z])&lt;/code>&lt;/p></description></item><item><title>切片</title><link>https://kingye.me/study-python/docs/basic/grammar/slice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/slice/</guid><description>&lt;h1 id="切片">
 切片
 &lt;a class="anchor" href="#%e5%88%87%e7%89%87">#&lt;/a>
&lt;/h1>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>start:end:step&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="遍历">
 遍历
 &lt;a class="anchor" href="#%e9%81%8d%e5%8e%86">#&lt;/a>
&lt;/h2>
&lt;h3 id="enumerate">
 enumerate
 &lt;a class="anchor" href="#enumerate">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>a &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;a&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;b&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;c&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;d&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># index &amp;amp; value&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> xrange(len(a)):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print i, a[i]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># iterate with index&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i, el &lt;span style="color:#f92672">in&lt;/span> enumerate(a):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print i, el
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># i 从 1 开始&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> i, el &lt;span style="color:#f92672">in&lt;/span> enumerate(a, &lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print i, el
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="step-为负数">
 step 为负数
 &lt;a class="anchor" href="#step-%e4%b8%ba%e8%b4%9f%e6%95%b0">#&lt;/a>
&lt;/h2>
&lt;p>最后一个字符到下标是 -1，即从右到左，是从 -1 开始，然后 -1、-2、-3、-4、-5&lt;/p>
&lt;h3 id="字符串反转">
 字符串反转
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%8f%8d%e8%bd%ac">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>letter[::&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="为什么-s-1-1-是空">
 为什么 s[:-1:-1] 是空
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88-s-1-1-%e6%98%af%e7%a9%ba">#&lt;/a>
&lt;/h3>
&lt;p>只需要记住，s[start:end:step] 就行，包括 start，不包括 end，
所以，如果要实现：去掉最后一个元素，然后再倒序，应该是：&lt;/p></description></item><item><title>协程</title><link>https://kingye.me/study-python/docs/basic/other/coroutine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/coroutine/</guid><description>&lt;h1 id="python-协程">
 Python 协程
 &lt;a class="anchor" href="#python-%e5%8d%8f%e7%a8%8b">#&lt;/a>
&lt;/h1>
&lt;ul>
&lt;li>执行效率高
&lt;ul>
&lt;li>子程序切换不是线程切换，而是由程序自身控制，因此，没有线程切换的开销，和多线程比，线程数量越多，协程的性能优势就越明显。&lt;/li>
&lt;li>不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不加锁，只需要判断状态就好了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>因为协程是一个线程执行，那怎么利用多核 CPU 呢？
最简单的方法是&lt;strong>多进程 + 协程&lt;/strong>，既充分利用多核，又充分发挥协程的高效率，可获得极高的性能。&lt;/p>
&lt;h2 id="子程序就是协程的一种特例">
 子程序就是协程的一种特例
 &lt;a class="anchor" href="#%e5%ad%90%e7%a8%8b%e5%ba%8f%e5%b0%b1%e6%98%af%e5%8d%8f%e7%a8%8b%e7%9a%84%e4%b8%80%e7%a7%8d%e7%89%b9%e4%be%8b">#&lt;/a>
&lt;/h2>
&lt;p>Donald Knuth 的一句话总结协程的特点：&lt;/p>
&lt;p>“子程序就是协程的一种特例。”&lt;/p>
&lt;h2 id="geventhttpsgithubcomgeventgevent-github-starshttpsimgshieldsiogithubstarsgeventgeventsvg">
 &lt;a href="https://github.com/gevent/gevent">gevent&lt;/a> &lt;img src="https://img.shields.io/github/stars/gevent/gevent.svg" alt="Github stars" />
 &lt;a class="anchor" href="#geventhttpsgithubcomgeventgevent-github-starshttpsimgshieldsiogithubstarsgeventgeventsvg">#&lt;/a>
&lt;/h2>
&lt;p>Python 通过 yield 提供了对协程的基本支持，但是不完全。而第三方的 gevent 为 Python 提供了比较完善的协程支持。&lt;/p>
&lt;p>gevent 是第三方库，通过 greenlet 实现协程，其基本思想是：&lt;/p>
&lt;p>当一个 greenlet 遇到 IO 操作时，比如访问网络，就自动切换到其他的 greenlet，等到 IO 操作完成，再在适当的时候切换回来继续执行。由于 IO 操作非常耗时，经常使程序处于等待状态，有了 gevent 为我们自动切换协程，就保证总有 greenlet 在运行，而不是等待 IO。&lt;/p>
&lt;p>由于切换是在 IO 操作时自动完成，所以 gevent 需要修改 Python 自带的一些标准库，这一过程在启动时通过 &lt;code>monkey patch&lt;/code> 完成：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> gevent &lt;span style="color:#f92672">import&lt;/span> monkey; &lt;span style="color:#960050;background-color:#1e0010">m&lt;/span>onkey&lt;span style="color:#f92672">.&lt;/span>patch_socket()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> gevent
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">f&lt;/span>(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> range(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print gevent&lt;span style="color:#f92672">.&lt;/span>getcurrent(), i
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g1 &lt;span style="color:#f92672">=&lt;/span> gevent&lt;span style="color:#f92672">.&lt;/span>spawn(f, &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g2 &lt;span style="color:#f92672">=&lt;/span> gevent&lt;span style="color:#f92672">.&lt;/span>spawn(f, &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g3 &lt;span style="color:#f92672">=&lt;/span> gevent&lt;span style="color:#f92672">.&lt;/span>spawn(f, &lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g1&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g2&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>g3&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参考：&lt;/p></description></item><item><title>字典</title><link>https://kingye.me/study-python/docs/basic/grammar/dict/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/dict/</guid><description>&lt;h1 id="字典">
 字典
 &lt;a class="anchor" href="#%e5%ad%97%e5%85%b8">#&lt;/a>
&lt;/h1>
&lt;h2 id="遍历">
 遍历
 &lt;a class="anchor" href="#%e9%81%8d%e5%8e%86">#&lt;/a>
&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> key &lt;span style="color:#f92672">in&lt;/span> d:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># For Python 3.x:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> key, value &lt;span style="color:#f92672">in&lt;/span> d&lt;span style="color:#f92672">.&lt;/span>items():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># For Python 2.x:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> key, value &lt;span style="color:#f92672">in&lt;/span> d&lt;span style="color:#f92672">.&lt;/span>iteritems():
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="items">
 items
 &lt;a class="anchor" href="#items">#&lt;/a>
&lt;/h3>
&lt;p>The operation items() will work for both 2 and 3,
but in 2 it will return a list of the dictionary&amp;rsquo;s (key, value) pairs,
which will &lt;strong>not&lt;/strong> reflect changes to the dict that happen after the items() call.&lt;/p>
&lt;p>If you want the 2.x behavior in 3.x, you can call &lt;code>list(d.items())&lt;/code>&lt;/p></description></item><item><title>生成器</title><link>https://kingye.me/study-python/docs/basic/grammar/generator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/generator/</guid><description>&lt;h1 id="生成器">
 生成器
 &lt;a class="anchor" href="#%e7%94%9f%e6%88%90%e5%99%a8">#&lt;/a>
&lt;/h1>
&lt;h2 id="iterable-可迭代的">
 iterable 可迭代的
 &lt;a class="anchor" href="#iterable-%e5%8f%af%e8%bf%ad%e4%bb%a3%e7%9a%84">#&lt;/a>
&lt;/h2>
&lt;p>Everything you can use &amp;ldquo;for&amp;hellip; in&amp;hellip;&amp;rdquo; on is an iterable; lists, strings, files&amp;hellip;&lt;/p>
&lt;p>iterable 包括：&lt;/p>
&lt;ul>
&lt;li>list&lt;/li>
&lt;li>tuple&lt;/li>
&lt;li>string&lt;/li>
&lt;li>dictionary&lt;/li>
&lt;li>file&lt;/li>
&lt;li>&lt;code>enumerate object&lt;/code>&lt;/li>
&lt;/ul>
&lt;h2 id="iterator-迭代器">
 iterator 迭代器
 &lt;a class="anchor" href="#iterator-%e8%bf%ad%e4%bb%a3%e5%99%a8">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>iter() 函数用来生成迭代器。&lt;/li>
&lt;li>&lt;code>iter(object[, sentinel])&lt;/code>
&lt;ul>
&lt;li>object：支持迭代的集合对象&lt;/li>
&lt;li>sentinel
&lt;ul>
&lt;li>如果传递了 sentinel，则 object 必须是一个可调用的对象（如函数），此时 iter 创建了一个迭代器对象&lt;/li>
&lt;li>每次调用这个迭代器对象的 &lt;code>__next__()&lt;/code> 方法时，都会调用 object&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>迭代器只能迭代一次&lt;/p>
&lt;p>a kind of iterable you can only iterate over once.&lt;/p>
&lt;h2 id="generator">
 generator
 &lt;a class="anchor" href="#generator">#&lt;/a>
&lt;/h2>
&lt;p>Generators are iterators, a kind of iterable you can only iterate over once.
Generators do not store all the values in memory, they generate the values on the fly.&lt;/p></description></item><item><title>类</title><link>https://kingye.me/study-python/docs/basic/grammar/class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/class/</guid><description>&lt;h1 id="类">
 类
 &lt;a class="anchor" href="#%e7%b1%bb">#&lt;/a>
&lt;/h1>
&lt;h3 id="问答">
 问答
 &lt;a class="anchor" href="#%e9%97%ae%e7%ad%94">#&lt;/a>
&lt;/h3>
&lt;h4 id="class-后面加不加-object-的区别">
 class 后面加不加 object 的区别
 &lt;a class="anchor" href="#class-%e5%90%8e%e9%9d%a2%e5%8a%a0%e4%b8%8d%e5%8a%a0-object-%e7%9a%84%e5%8c%ba%e5%88%ab">#&lt;/a>
&lt;/h4>
&lt;p>python 3 中已经默认就帮你加载了 object 了（即便你没有写上 object）&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>python 2.x&lt;/th>
 &lt;th>python 2.x&lt;/th>
 &lt;th>python 3.x&lt;/th>
 &lt;th>python 3.x&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>不含 object&lt;/td>
 &lt;td>含 object&lt;/td>
 &lt;td>不含 object&lt;/td>
 &lt;td>含 object&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>__doc__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__doc__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__doc__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__doc__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;code>__module__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__module__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__module__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__module__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__class__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__class__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__class__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__delattr__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__delattr__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__delattr__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__dict__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__dict__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__dict__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__format__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__format__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__format__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__getattribute__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__getattribute__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__getattribute__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__hash__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__hash__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__hash__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__init__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__init__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__init__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__new__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__new__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__new__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__reduce__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__reduce__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__reduce__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__reduce_ex__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__reduce_ex__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__reduce_ex__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__repr__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__repr__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__repr__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__setattr__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__setattr__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__setattr__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__sizeof__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__sizeof__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__sizeof__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__str__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__str__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__str__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__subclasshook__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__subclasshook__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__subclasshook__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__weakref__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__weakref__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__weakref__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__dir__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__dir__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__eq__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__eq__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__ge__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__ge__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__gt__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__gt__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__le__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__le__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__lt__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__lt__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__ne__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__ne__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;/td>
 &lt;td>&lt;/td>
 &lt;td>&lt;code>__init_subclass__&lt;/code>&lt;/td>
 &lt;td>&lt;code>__init_subclass__&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h5 id="init_subclass">
 &lt;strong>init_subclass&lt;/strong>
 &lt;a class="anchor" href="#init_subclass">#&lt;/a>
&lt;/h5>
&lt;p>类方法  &lt;code>__init_subclass__&lt;/code>  从  &lt;code>3.6&lt;/code> （&lt;a href="https://docs.python.org/3.6/whatsnew/3.6.html#pep-487-simpler-customization-of-class-creation">whatsnew3.6&lt;/a>） 引入，作用是可以在不使用元类的情况下改变子类的行为。严格来说它不属于元类编程，但也能达到编辑其他类的一种手段。&lt;/p></description></item><item><title>装饰器</title><link>https://kingye.me/study-python/docs/basic/grammar/function/decorator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/function/decorator/</guid><description>&lt;h1 id="装饰器">
 装饰器
 &lt;a class="anchor" href="#%e8%a3%85%e9%a5%b0%e5%99%a8">#&lt;/a>
&lt;/h1>
&lt;p>函数参数能够接收别的函数，就是&lt;strong>高阶函数&lt;/strong>&lt;/p>
&lt;p>decorator 就是一个返回函数的高阶函数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> functools
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">log&lt;/span>(text):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">decorator&lt;/span>(func):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@functools.wraps&lt;/span>(func)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">wrapper&lt;/span>(&lt;span style="color:#f92672">*&lt;/span>argc, &lt;span style="color:#f92672">**&lt;/span>kw):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">()&amp;#39;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (text, func&lt;span style="color:#f92672">.&lt;/span>__name))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> func(&lt;span style="color:#f92672">*&lt;/span>args, &lt;span style="color:#f92672">**&lt;/span>kw)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> wrapper
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> decorator
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">@log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;execute&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">now&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print(&lt;span style="color:#e6db74">&amp;#39;2020-04-26&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>4.3 关注项目</title><link>https://kingye.me/study-python/docs/appendix/attention/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/appendix/attention/</guid><description>&lt;h1 id="关注项目">
 关注项目
 &lt;a class="anchor" href="#%e5%85%b3%e6%b3%a8%e9%a1%b9%e7%9b%ae">#&lt;/a>
&lt;/h1>
&lt;h2 id="web">
 Web
 &lt;a class="anchor" href="#web">#&lt;/a>
&lt;/h2>
&lt;h3 id="palletsflaskhttpsgithubcompalletsflask-github-starshttpsimgshieldsiogithubstarspalletsflasksvg-github-forkshttpsimgshieldsiogithubforkspalletsflasksvg-languagehttpsimgshieldsiogithublanguagestoppalletsflasksvg-last-taghttpsimgshieldsiogithubvtagpalletsflasksvgsortsemver-last-commithttpsimgshieldsiogithublast-commitpalletsflasksvg">
 &lt;a href="https://github.com/pallets/flask">pallets/flask&lt;/a> &lt;img src="https://img.shields.io/github/stars/pallets/flask.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/forks/pallets/flask.svg" alt="Github forks" /> &lt;img src="https://img.shields.io/github/languages/top/pallets/flask.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/pallets/flask.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/pallets/flask.svg" alt="Last commit" />
 &lt;a class="anchor" href="#palletsflaskhttpsgithubcompalletsflask-github-starshttpsimgshieldsiogithubstarspalletsflasksvg-github-forkshttpsimgshieldsiogithubforkspalletsflasksvg-languagehttpsimgshieldsiogithublanguagestoppalletsflasksvg-last-taghttpsimgshieldsiogithubvtagpalletsflasksvgsortsemver-last-commithttpsimgshieldsiogithublast-commitpalletsflasksvg">#&lt;/a>
&lt;/h3>
&lt;p>The Python micro framework for building web applications.&lt;/p>
&lt;h3 id="djangodjangohttpsgithubcomdjangodjango-github-starshttpsimgshieldsiogithubstarsdjangodjangosvg-github-forkshttpsimgshieldsiogithubforksdjangodjangosvg-languagehttpsimgshieldsiogithublanguagestopdjangodjangosvg-last-taghttpsimgshieldsiogithubvtagdjangodjangosvgsortsemver-last-commithttpsimgshieldsiogithublast-commitdjangodjangosvg">
 &lt;a href="https://github.com/django/django">django/django&lt;/a> &lt;img src="https://img.shields.io/github/stars/django/django.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/forks/django/django.svg" alt="Github forks" /> &lt;img src="https://img.shields.io/github/languages/top/django/django.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/django/django.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/django/django.svg" alt="Last commit" />
 &lt;a class="anchor" href="#djangodjangohttpsgithubcomdjangodjango-github-starshttpsimgshieldsiogithubstarsdjangodjangosvg-github-forkshttpsimgshieldsiogithubforksdjangodjangosvg-languagehttpsimgshieldsiogithublanguagestopdjangodjangosvg-last-taghttpsimgshieldsiogithubvtagdjangodjangosvgsortsemver-last-commithttpsimgshieldsiogithublast-commitdjangodjangosvg">#&lt;/a>
&lt;/h3>
&lt;p>The Web framework for perfectionists with deadlines.&lt;/p>
&lt;h3 id="tiangolofastapihttpsgithubcomtiangolofastapi-github-starshttpsimgshieldsiogithubstarstiangolofastapisvg-github-forkshttpsimgshieldsiogithubforkstiangolofastapisvg-languagehttpsimgshieldsiogithublanguagestoptiangolofastapisvg-last-taghttpsimgshieldsiogithubvtagtiangolofastapisvgsortsemver-last-commithttpsimgshieldsiogithublast-committiangolofastapisvg">
 &lt;a href="https://github.com/tiangolo/fastapi">tiangolo/fastapi&lt;/a> &lt;img src="https://img.shields.io/github/stars/tiangolo/fastapi.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/forks/tiangolo/fastapi.svg" alt="Github forks" /> &lt;img src="https://img.shields.io/github/languages/top/tiangolo/fastapi.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/tiangolo/fastapi.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/tiangolo/fastapi.svg" alt="Last commit" />
 &lt;a class="anchor" href="#tiangolofastapihttpsgithubcomtiangolofastapi-github-starshttpsimgshieldsiogithubstarstiangolofastapisvg-github-forkshttpsimgshieldsiogithubforkstiangolofastapisvg-languagehttpsimgshieldsiogithublanguagestoptiangolofastapisvg-last-taghttpsimgshieldsiogithubvtagtiangolofastapisvgsortsemver-last-commithttpsimgshieldsiogithublast-committiangolofastapisvg">#&lt;/a>
&lt;/h3>
&lt;p>FastAPI framework, high performance, easy to learn, fast to code, ready for production&lt;/p>
&lt;h3 id="tornadowebtornadohttpsgithubcomtornadowebtornado-github-starshttpsimgshieldsiogithubstarstornadowebtornadosvg-github-forkshttpsimgshieldsiogithubforkstornadowebtornadosvg-languagehttpsimgshieldsiogithublanguagestoptornadowebtornadosvg-last-taghttpsimgshieldsiogithubvtagtornadowebtornadosvgsortsemver-last-commithttpsimgshieldsiogithublast-committornadowebtornadosvg">
 &lt;a href="https://github.com/tornadoweb/tornado">tornadoweb/tornado&lt;/a> &lt;img src="https://img.shields.io/github/stars/tornadoweb/tornado.svg" alt="Github stars" /> &lt;img src="https://img.shields.io/github/forks/tornadoweb/tornado.svg" alt="Github forks" /> &lt;img src="https://img.shields.io/github/languages/top/tornadoweb/tornado.svg" alt="Language" /> &lt;img src="https://img.shields.io/github/v/tag/tornadoweb/tornado.svg?sort=semver" alt="Last Tag" /> &lt;img src="https://img.shields.io/github/last-commit/tornadoweb/tornado.svg" alt="Last commit" />
 &lt;a class="anchor" href="#tornadowebtornadohttpsgithubcomtornadowebtornado-github-starshttpsimgshieldsiogithubstarstornadowebtornadosvg-github-forkshttpsimgshieldsiogithubforkstornadowebtornadosvg-languagehttpsimgshieldsiogithublanguagestoptornadowebtornadosvg-last-taghttpsimgshieldsiogithubvtagtornadowebtornadosvgsortsemver-last-commithttpsimgshieldsiogithublast-committornadowebtornadosvg">#&lt;/a>
&lt;/h3>
&lt;p>Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.&lt;/p></description></item><item><title>3.7</title><link>https://kingye.me/study-python/docs/basic/other/version/3.7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/version/3.7/</guid><description>&lt;h1 id="python-37">
 Python 3.7
 &lt;a class="anchor" href="#python-37">#&lt;/a>
&lt;/h1>
&lt;h2 id="安装">
 安装
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85">#&lt;/a>
&lt;/h2>
&lt;h3 id="依赖">
 依赖
 &lt;a class="anchor" href="#%e4%be%9d%e8%b5%96">#&lt;/a>
&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo yum install readline readline-devel readline-static -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install openssl openssl-devel openssl-static -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install sqlite-devel -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install bzip2-devel bzip2-libs -y
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="libffi-devel">
 libffi-devel
 &lt;a class="anchor" href="#libffi-devel">#&lt;/a>
&lt;/h4>
&lt;p>3.7 版本需要一个新的包 libffi-devel，安装此包之后再次进行编译安装即可。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>sudo yum install libffi-devel -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>若在安装前移除了 &lt;code>/usr/bin&lt;/code> 下 python 的文件链接依赖，此时 &lt;code>yum&lt;/code> 无法正常使用，需要自己下载相关软件包安装，为节省读者时间，放上链接&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>wget http://mirror.centos.org/centos/7/os/x86_64/Packages/libffi-devel-3.0.13-18.el7.x86_64.rpm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rpm -ivh libffi-devel-3.0.13-18.el7.x86_64.rpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>安装完成后重新进行 &lt;code>make install&lt;/code>，结束后再次配置相关文件的软连接即可。&lt;/p>
&lt;p>解读：
python3 中有个内置模块叫 ctypes，它是 python3 的外部函数库模块，提供了兼容 C 语言的数据类型，并通过它调用 Linux 系统下的共享库 (Shared library)，此模块需要使用 centos7 系统中外部函数库 (Foreign function library) 的开发链接库 (头文件和链接库)。
由于在 centos7 系统中没有安装外部函数库 (libffi) 的开发链接库软件包，所以在安装 pip 的时候就报了 &amp;ldquo;ModuleNotFoundError: No module named &amp;lsquo;_ctypes&amp;rsquo;&amp;rdquo; 的错误。&lt;/p></description></item><item><title>Anaconda</title><link>https://kingye.me/study-python/docs/basic/other/anaconda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/anaconda/</guid><description>&lt;h1 id="anaconda">
 Anaconda
 &lt;a class="anchor" href="#anaconda">#&lt;/a>
&lt;/h1>
&lt;p>Anaconda 是一个&lt;a href="https://www.wikiwand.com/zh-cn/%E5%85%8D%E8%B4%B9">免费&lt;/a>&lt;a href="https://www.wikiwand.com/zh-cn/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81">开源&lt;/a> 的  &lt;a href="https://www.wikiwand.com/zh-cn/Python">Python&lt;/a> 和  &lt;a href="https://www.wikiwand.com/zh-cn/R%E8%AF%AD%E8%A8%80">R 语言&lt;/a>的发行版本，用于&lt;a href="https://www.wikiwand.com/zh-cn/%E8%AE%A1%E7%AE%97%E7%A7%91%E5%AD%A6">计算科学&lt;/a>（&lt;a href="https://www.wikiwand.com/zh-cn/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6" title="数据科学">数据科学&lt;/a>、&lt;a href="https://www.wikiwand.com/zh-cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0" title="机器学习">机器学习&lt;/a>、&lt;a href="https://www.wikiwand.com/zh-cn/%E5%A4%A7%E6%95%B8%E6%93%9A" title="大数据">大数据处理&lt;/a>和&lt;a href="https://www.wikiwand.com/zh-cn/%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90">预测分析&lt;/a>），Anaconda 致力于简化&lt;a href="https://www.wikiwand.com/zh-cn/%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">包管理&lt;/a>和部署。&lt;/p>
&lt;p>Anaconda 的包使用&lt;a href="https://www.wikiwand.com/zh-cn/%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">软件包管理系统&lt;/a> &lt;a href="https://www.wikiwand.com/zh-cn/Conda" title="Conda">Conda&lt;/a> 进行管理。&lt;/p></description></item></channel></rss>