<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>首页 on Python 学习笔记</title><link>https://kingye.me/study-python/</link><description>Recent content in 首页 on Python 学习笔记</description><generator>Hugo</generator><language>en</language><atom:link href="https://kingye.me/study-python/index.xml" rel="self" type="application/rss+xml"/><item><title>包管理</title><link>https://kingye.me/study-python/docs/basic/other/package/manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/package/manage/</guid><description>&lt;h1 id="python-包管理"&gt;
 Python 包管理
 
 &lt;a class="anchor" href="#python-%e5%8c%85%e7%ae%a1%e7%90%86"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="pip"&gt;
 pip
 
 &lt;a class="anchor" href="#pip"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;h3 id="加速"&gt;
 加速
 
 &lt;a class="anchor" href="#%e5%8a%a0%e9%80%9f"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;mkdir -p ~/.config/pip
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;cat &lt;span style="color:#e6db74"&gt;&amp;lt;&amp;lt; EOF &amp;gt; ~/.config/pip/pip.conf
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;[global]
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;index-url = https://pypi.tuna.tsinghua.edu.cn/simple
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;extra-index-url = https://mirrors.aliyun.com/pypi/simple https://pypi.doubanio.com/simple https://mirrors.tuna.tsinghua.edu.cn
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#e6db74"&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>版本管理</title><link>https://kingye.me/study-python/docs/basic/other/version/manage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/version/manage/</guid><description>&lt;h1 id="python-版本管理"&gt;
 Python 版本管理
 
 &lt;a class="anchor" href="#python-%e7%89%88%e6%9c%ac%e7%ae%a1%e7%90%86"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="pyenv"&gt;
 pyenv
 
 &lt;a class="anchor" href="#pyenv"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;h3 id="pyenv-加速"&gt;
 pyenv 加速
 
 &lt;a class="anchor" href="#pyenv-%e5%8a%a0%e9%80%9f"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;.zshrc&lt;/code&gt; 添加&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;function&lt;/span&gt; pyenvinstall &lt;span style="color:#f92672"&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; wget -c https://registry.npmmirror.com/-/binary/python/$@/Python-$@.tar.xz -P ~/.pyenv/cache/
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; pyenv install $@
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行 &lt;code&gt;zsh&lt;/code&gt; 使配置生效，
之后即可这样安装：
&lt;code&gt;pyenvinstall 3.8.2&lt;/code&gt;&lt;/p&gt;
&lt;h3 id="pyenv-基础命令"&gt;
 pyenv 基础命令
 
 &lt;a class="anchor" href="#pyenv-%e5%9f%ba%e7%a1%80%e5%91%bd%e4%bb%a4"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# List all available versions&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;pyenv install -l
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# 更新&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;pyenv update
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;brew update &lt;span style="color:#f92672"&gt;&amp;amp;&amp;amp;&lt;/span&gt; brew upgrade pyenv
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="pyenv-update"&gt;
 pyenv update
 
 &lt;a class="anchor" href="#pyenv-update"&gt;#&lt;/a&gt;
 
&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://github.com/pyenv/pyenv-update"&gt;pyenv/pyenv-update&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/pyenv/pyenv-update.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/languages/top/pyenv/pyenv-update.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/pyenv/pyenv-update.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/pyenv/pyenv-update.svg" alt="Last commit" /&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;git clone https://github.com/pyenv/pyenv-update.git &lt;span style="color:#66d9ef"&gt;$(&lt;/span&gt;pyenv root&lt;span style="color:#66d9ef"&gt;)&lt;/span&gt;/plugins/pyenv-update
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;pyenv update
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="pyenv-global-382-2717"&gt;
 pyenv global 3.8.2 2.7.17
 
 &lt;a class="anchor" href="#pyenv-global-382-2717"&gt;#&lt;/a&gt;
 
&lt;/h4&gt;
&lt;p&gt;set by &lt;code&gt;~/.pyenv/version&lt;/code&gt;&lt;/p&gt;</description></item><item><title>4.1 教程</title><link>https://kingye.me/study-python/docs/appendix/tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/appendix/tutorial/</guid><description>&lt;h1 id="教程"&gt;
 教程
 
 &lt;a class="anchor" href="#%e6%95%99%e7%a8%8b"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="基础"&gt;
 基础
 
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;h3 id="satwikkansalwtfpython-github-stars-language-last-tag-last-commit"&gt;
 &lt;a href="https://github.com/satwikkansal/wtfpython"&gt;satwikkansal/wtfpython&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/satwikkansal/wtfpython.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/languages/top/satwikkansal/wtfpython.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/satwikkansal/wtfpython.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/satwikkansal/wtfpython.svg" alt="Last commit" /&gt;
 
 &lt;a class="anchor" href="#satwikkansalwtfpython-github-stars-language-last-tag-last-commit"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/leisurelicht/wtfpython-cn"&gt;leisurelicht/wtfpython-cn&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/leisurelicht/wtfpython-cn.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/languages/top/leisurelicht/wtfpython-cn.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/leisurelicht/wtfpython-cn.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/leisurelicht/wtfpython-cn.svg" alt="Last commit" /&gt;&lt;/p&gt;
&lt;p&gt;一些有趣且鲜为人知的 Python 特性&lt;/p&gt;
&lt;h3 id="gto76python-cheatsheet-github-stars-language-last-tag-last-commit"&gt;
 &lt;a href="https://github.com/gto76/python-cheatsheet"&gt;gto76/python-cheatsheet&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/gto76/python-cheatsheet.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/languages/top/gto76/python-cheatsheet.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/gto76/python-cheatsheet.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/gto76/python-cheatsheet.svg" alt="Last commit" /&gt;
 
 &lt;a class="anchor" href="#gto76python-cheatsheet-github-stars-language-last-tag-last-commit"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;Comprehensive Python Cheatsheet&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="bookyidao620cpython3-cookbook-github-stars"&gt;
 (book)&lt;a href="https://github.com/yidao620c/python3-cookbook"&gt;yidao620c/python3-cookbook&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/yidao620c/python3-cookbook.svg" alt="Github stars" /&gt;
 
 &lt;a class="anchor" href="#bookyidao620cpython3-cookbook-github-stars"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;《Python Cookbook》 3rd Edition 翻译&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2 id="进阶"&gt;
 进阶
 
 &lt;a class="anchor" href="#%e8%bf%9b%e9%98%b6"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;h3 id="jakevdppythondatasciencehandbook-github-stars"&gt;
 &lt;a href="https://github.com/jakevdp/PythonDataScienceHandbook"&gt;jakevdp/PythonDataScienceHandbook&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/jakevdp/PythonDataScienceHandbook.svg" alt="Github stars" /&gt;
 
 &lt;a class="anchor" href="#jakevdppythondatasciencehandbook-github-stars"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;Python Data Science Handbook: full text in Jupyter Notebooks&lt;/p&gt;</description></item><item><title>4.2 面试题</title><link>https://kingye.me/study-python/docs/appendix/interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/appendix/interview/</guid><description>&lt;h1 id="面试题"&gt;
 面试题
 
 &lt;a class="anchor" href="#%e9%9d%a2%e8%af%95%e9%a2%98"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;p&gt;参考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.zhihu.com/question/33398583"&gt;如何面试 Python 后端工程师？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="基础题"&gt;
 基础题
 
 &lt;a class="anchor" href="#%e5%9f%ba%e7%a1%80%e9%a2%98"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;h3 id="数据结构"&gt;
 数据结构
 
 &lt;a class="anchor" href="#%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;h4 id="元组是不是真的不可变"&gt;
 元组是不是真的不可变？
 
 &lt;a class="anchor" href="#%e5%85%83%e7%bb%84%e6%98%af%e4%b8%8d%e6%98%af%e7%9c%9f%e7%9a%84%e4%b8%8d%e5%8f%af%e5%8f%98"&gt;#&lt;/a&gt;
 
&lt;/h4&gt;
&lt;p&gt;tuple 的每个元素，指向永远不变。&lt;/p&gt;
&lt;p&gt;要创建一个内容也不变的 tuple 怎么做？&lt;/p&gt;
&lt;p&gt;必须保证 tuple 的每一个元素本身也不能变。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# “可变的” tuple：&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; t &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#f92672"&gt;(&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style="color:#f92672"&gt;[&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;A&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;B&amp;#39;&lt;/span&gt;&lt;span style="color:#f92672"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; t&lt;span style="color:#f92672"&gt;[&lt;/span&gt;2&lt;span style="color:#f92672"&gt;][&lt;/span&gt;0&lt;span style="color:#f92672"&gt;]&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; t&lt;span style="color:#f92672"&gt;[&lt;/span&gt;2&lt;span style="color:#f92672"&gt;][&lt;/span&gt;1&lt;span style="color:#f92672"&gt;]&lt;/span&gt; &lt;span style="color:#f92672"&gt;=&lt;/span&gt; &lt;span style="color:#e6db74"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; t
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;, &lt;span style="color:#f92672"&gt;[&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;X&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;&lt;span style="color:#f92672"&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h4 id="迭代器-vs-生成器"&gt;
 迭代器 vs 生成器
 
 &lt;a class="anchor" href="#%e8%bf%ad%e4%bb%a3%e5%99%a8-vs-%e7%94%9f%e6%88%90%e5%99%a8"&gt;#&lt;/a&gt;
 
&lt;/h4&gt;
&lt;h5 id="迭代器"&gt;
 迭代器
 
 &lt;a class="anchor" href="#%e8%bf%ad%e4%bb%a3%e5%99%a8"&gt;#&lt;/a&gt;
 
&lt;/h5&gt;
&lt;p&gt;把一个类作为一个&lt;strong&gt;迭代器&lt;/strong&gt;使用需要在类中实现两个方法 &lt;code&gt;__iter__()&lt;/code&gt; 与 &lt;code&gt;__next__()&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; list&lt;span style="color:#f92672"&gt;=[&lt;/span&gt;1,2,3,4&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; it &lt;span style="color:#f92672"&gt;=&lt;/span&gt; iter&lt;span style="color:#f92672"&gt;(&lt;/span&gt;list&lt;span style="color:#f92672"&gt;)&lt;/span&gt; &lt;span style="color:#75715e"&gt;# 创建迭代器对象&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; print &lt;span style="color:#f92672"&gt;(&lt;/span&gt;next&lt;span style="color:#f92672"&gt;(&lt;/span&gt;it&lt;span style="color:#f92672"&gt;))&lt;/span&gt; &lt;span style="color:#75715e"&gt;# 输出迭代器的下一个元素&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt; print &lt;span style="color:#f92672"&gt;(&lt;/span&gt;next&lt;span style="color:#f92672"&gt;(&lt;/span&gt;it&lt;span style="color:#f92672"&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#ae81ff"&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h5 id="生成器"&gt;
 生成器
 
 &lt;a class="anchor" href="#%e7%94%9f%e6%88%90%e5%99%a8"&gt;#&lt;/a&gt;
 
&lt;/h5&gt;
&lt;p&gt;在 Python 中，使用了 yield 的函数被称为生成器（generator）。&lt;/p&gt;</description></item><item><title>import</title><link>https://kingye.me/study-python/docs/basic/import/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/import/</guid><description>&lt;h1 id="import"&gt;
 import
 
 &lt;a class="anchor" href="#import"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="python-导入搜索顺序"&gt;
 Python 导入搜索顺序
 
 &lt;a class="anchor" href="#python-%e5%af%bc%e5%85%a5%e6%90%9c%e7%b4%a2%e9%a1%ba%e5%ba%8f"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;当你启动 Python 时，它会构造一个列表 &lt;code&gt;sys.path&lt;/code&gt;，按从左到右顺序查找模块/包：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;脚本所在目录
&lt;ol&gt;
&lt;li&gt;或空字符串 &lt;code&gt;''&lt;/code&gt; 代表“当前工作目录”
&lt;ol&gt;
&lt;li&gt;当你用 python -c &amp;ldquo;&amp;hellip;&amp;rdquo; 执行命令时&lt;/li&gt;
&lt;li&gt;或者用 python -m modulename 模块方式运行&lt;/li&gt;
&lt;li&gt;或者在交互式解释器里直接执行时&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;PYTHONPATH 环境变量里声明的路径（如果有）&lt;/li&gt;
&lt;li&gt;标准库路径&lt;/li&gt;
&lt;li&gt;虚拟环境的 site-packages（&amp;hellip;/.venv/lib/pythonX.Y/site-packages）&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;vllm&lt;span style="color:#f92672"&gt;)&lt;/span&gt; root@lts-4090:/mnt/data1/yewang/study/vllm# cat test.py
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;import sys
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;print&lt;span style="color:#f92672"&gt;(&lt;/span&gt;sys.path&lt;span style="color:#f92672"&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;vllm&lt;span style="color:#f92672"&gt;)&lt;/span&gt; root@lts-4090:/mnt/data1/yewang/study/vllm# python test.py
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;/mnt/data1/yewang/study/vllm&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python312.zip&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python3.12&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python3.12/lib-dynload&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/mnt/data1/yewang/study/vllm/.venv/lib/python3.12/site-packages&amp;#39;&lt;/span&gt;&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;vllm&lt;span style="color:#f92672"&gt;)&lt;/span&gt; root@lts-4090:/mnt/data1/yewang/study/vllm# cd ..
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;vllm&lt;span style="color:#f92672"&gt;)&lt;/span&gt; root@lts-4090:/mnt/data1/yewang/study# python vllm/test.py
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;/mnt/data1/yewang/study/vllm&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python312.zip&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python3.12&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python3.12/lib-dynload&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/mnt/data1/yewang/study/vllm/.venv/lib/python3.12/site-packages&amp;#39;&lt;/span&gt;&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;vllm&lt;span style="color:#f92672"&gt;)&lt;/span&gt; root@lts-4090:/mnt/data1/yewang/study/vllm# python -c &lt;span style="color:#e6db74"&gt;&amp;#34;import sys; print(sys.path)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python312.zip&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python3.12&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python3.12/lib-dynload&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/mnt/data1/yewang/study/vllm/.venv/lib/python3.12/site-packages&amp;#39;&lt;/span&gt;&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;vllm&lt;span style="color:#f92672"&gt;)&lt;/span&gt; root@lts-4090:/mnt/data1/yewang/study/vllm# cd ..
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;(&lt;/span&gt;vllm&lt;span style="color:#f92672"&gt;)&lt;/span&gt; root@lts-4090:/mnt/data1/yewang/study# python -c &lt;span style="color:#e6db74"&gt;&amp;#34;import sys; print(sys.path)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;&lt;span style="color:#e6db74"&gt;&amp;#39;&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python312.zip&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python3.12&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/root/.local/share/uv/python/cpython-3.12.9-linux-x86_64-gnu/lib/python3.12/lib-dynload&amp;#39;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#39;/mnt/data1/yewang/study/vllm/.venv/lib/python3.12/site-packages&amp;#39;&lt;/span&gt;&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;python -c &amp;quot;import vllm; print(vllm.**file**)&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;你在仓库根目录 /mnt/data1/yewang/study/vllm 下用 python -c &amp;hellip; 测试时，&lt;code&gt;sys.path[0] == ''&lt;/code&gt;（当前工作目录），第一个被查找的就是仓库根目录，这里恰好有个顶层目录 vllm/（源码包），于是就命中了源码版本，而不是 site-packages 里的已安装版本。&lt;/li&gt;
&lt;li&gt;跑 &lt;code&gt;examples/offline_inference/basic/basic.py&lt;/code&gt; 时，你又是在仓库里运行。多数情况下 sys.path[0] 会是 脚本所在目录（&amp;hellip;/examples/offline_inference/basic）。如果环境里 PYTHONPATH 含仓库根、或示例脚本/启动器做了路径注入（把仓库根加进 sys.path），仓库根就会进入前几位，仍然会先命中本地 vllm/。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>python 文件</title><link>https://kingye.me/study-python/docs/basic/file/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/file/</guid><description>&lt;h1 id="python-文件"&gt;
 python 文件
 
 &lt;a class="anchor" href="#python-%e6%96%87%e4%bb%b6"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;py 源码文件&lt;/li&gt;
&lt;li&gt;pyc 字节码文件&lt;/li&gt;
&lt;li&gt;pyi 类型指示文件&lt;/li&gt;
&lt;li&gt;pyd 扩展模块文件&lt;/li&gt;
&lt;li&gt;pyw 窗口文件&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>内建函数</title><link>https://kingye.me/study-python/docs/basic/grammar/builtin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/builtin/</guid><description>&lt;h1 id="内建函数"&gt;
 内建函数
 
 &lt;a class="anchor" href="#%e5%86%85%e5%bb%ba%e5%87%bd%e6%95%b0"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="all"&gt;
 all
 
 &lt;a class="anchor" href="#all"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;判断给定的可迭代参数 iterable 中的所有元素是否都为 TRUE&lt;/p&gt;
&lt;h2 id="any"&gt;
 any
 
 &lt;a class="anchor" href="#any"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;判断给定的可迭代参数 iterable 全为 False，则返回 False，如果有一个为 True，则返回 True&lt;/p&gt;
&lt;p&gt;元素除了是 0、空、FALSE 外都算 TRUE。&lt;/p&gt;
&lt;h2 id="basestring"&gt;
 basestring
 
 &lt;a class="anchor" href="#basestring"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;isinstance(obj, basestring)&lt;/code&gt; 等价于 &lt;code&gt;isinstance(obj, (str, unicode))&lt;/code&gt;&lt;/p&gt;
&lt;blockquote class="book-hint warning"&gt;
 
python3 已经没有 basestring 类型，用 str 代替了 basestring

&lt;/blockquote&gt;

&lt;h2 id="enumerate"&gt;
 enumerate
 
 &lt;a class="anchor" href="#enumerate"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;将一个可遍历的数据对象 (如列表、元组或字符串) 组合为一个索引序列，同时列出数据和数据下标&lt;/p&gt;
&lt;p&gt;&lt;code&gt;enumerate(sequence, [start=0])&lt;/code&gt;&lt;/p&gt;
&lt;h2 id="eval"&gt;
 eval
 
 &lt;a class="anchor" href="#eval"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;执行一个字符串表达式，并返回表达式的值&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;eval(&lt;span style="color:#e6db74"&gt;&amp;#39;3 * x&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;eval(&lt;span style="color:#e6db74"&gt;&amp;#39;pow(2,2)&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="isinstance"&gt;
 isinstance
 
 &lt;a class="anchor" href="#isinstance"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;判断一个对象是否是一个已知的类型&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;isinstance&lt;span style="color:#f92672"&gt;()&lt;/span&gt; 与 type&lt;span style="color:#f92672"&gt;()&lt;/span&gt; 区别：
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;type&lt;span style="color:#f92672"&gt;()&lt;/span&gt; 不会认为子类是一种父类类型，不考虑继承关系。
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;isinstance&lt;span style="color:#f92672"&gt;()&lt;/span&gt; 会认为子类是一种父类类型，考虑继承关系。
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;如果要判断两个类型是否相同推荐使用 isinstance&lt;span style="color:#f92672"&gt;()&lt;/span&gt;。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="pow"&gt;
 pow
 
 &lt;a class="anchor" href="#pow"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;pow(x, y[, z])&lt;/code&gt;&lt;/p&gt;</description></item><item><title>切片</title><link>https://kingye.me/study-python/docs/basic/grammar/slice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/slice/</guid><description>&lt;h1 id="切片"&gt;
 切片
 
 &lt;a class="anchor" href="#%e5%88%87%e7%89%87"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;start:end:step&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="遍历"&gt;
 遍历
 
 &lt;a class="anchor" href="#%e9%81%8d%e5%8e%86"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;h3 id="enumerate"&gt;
 enumerate
 
 &lt;a class="anchor" href="#enumerate"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;a &lt;span style="color:#f92672"&gt;=&lt;/span&gt; [&lt;span style="color:#e6db74"&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;b&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;c&amp;#34;&lt;/span&gt;, &lt;span style="color:#e6db74"&gt;&amp;#34;d&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# index &amp;amp; value&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; i &lt;span style="color:#f92672"&gt;in&lt;/span&gt; xrange(len(a)):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; print i, a[i]
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# iterate with index&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; i, el &lt;span style="color:#f92672"&gt;in&lt;/span&gt; enumerate(a):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; print i, el
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# i 从 1 开始&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; i, el &lt;span style="color:#f92672"&gt;in&lt;/span&gt; enumerate(a, &lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; print i, el
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id="step-为负数"&gt;
 step 为负数
 
 &lt;a class="anchor" href="#step-%e4%b8%ba%e8%b4%9f%e6%95%b0"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;最后一个字符到下标是 -1，即从右到左，是从 -1 开始，然后 -1、-2、-3、-4、-5&lt;/p&gt;
&lt;h3 id="字符串反转"&gt;
 字符串反转
 
 &lt;a class="anchor" href="#%e5%ad%97%e7%ac%a6%e4%b8%b2%e5%8f%8d%e8%bd%ac"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;letter[::&lt;span style="color:#f92672"&gt;-&lt;/span&gt;&lt;span style="color:#ae81ff"&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="为什么-s-1-1-是空"&gt;
 为什么 s[:-1:-1] 是空
 
 &lt;a class="anchor" href="#%e4%b8%ba%e4%bb%80%e4%b9%88-s-1-1-%e6%98%af%e7%a9%ba"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;只需要记住，s[start:end:step] 就行，包括 start，不包括 end，
所以，如果要实现：去掉最后一个元素，然后再倒序，应该是：&lt;/p&gt;</description></item><item><title>协程</title><link>https://kingye.me/study-python/docs/basic/other/coroutine/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/coroutine/</guid><description>&lt;h1 id="python-协程"&gt;
 Python 协程
 
 &lt;a class="anchor" href="#python-%e5%8d%8f%e7%a8%8b"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;执行效率高
&lt;ul&gt;
&lt;li&gt;子程序切换不是线程切换，而是由程序自身控制，因此，没有线程切换的开销，和多线程比，线程数量越多，协程的性能优势就越明显。&lt;/li&gt;
&lt;li&gt;不需要多线程的锁机制，因为只有一个线程，也不存在同时写变量冲突，在协程中控制共享资源不加锁，只需要判断状态就好了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为协程是一个线程执行，那怎么利用多核 CPU 呢？
最简单的方法是&lt;strong&gt;多进程 + 协程&lt;/strong&gt;，既充分利用多核，又充分发挥协程的高效率，可获得极高的性能。&lt;/p&gt;
&lt;h2 id="子程序就是协程的一种特例"&gt;
 子程序就是协程的一种特例
 
 &lt;a class="anchor" href="#%e5%ad%90%e7%a8%8b%e5%ba%8f%e5%b0%b1%e6%98%af%e5%8d%8f%e7%a8%8b%e7%9a%84%e4%b8%80%e7%a7%8d%e7%89%b9%e4%be%8b"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;Donald Knuth 的一句话总结协程的特点：&lt;/p&gt;
&lt;p&gt;“子程序就是协程的一种特例。”&lt;/p&gt;
&lt;h2 id="gevent-github-stars"&gt;
 &lt;a href="https://github.com/gevent/gevent"&gt;gevent&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/gevent/gevent.svg" alt="Github stars" /&gt;
 
 &lt;a class="anchor" href="#gevent-github-stars"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;Python 通过 yield 提供了对协程的基本支持，但是不完全。而第三方的 gevent 为 Python 提供了比较完善的协程支持。&lt;/p&gt;
&lt;p&gt;gevent 是第三方库，通过 greenlet 实现协程，其基本思想是：&lt;/p&gt;
&lt;p&gt;当一个 greenlet 遇到 IO 操作时，比如访问网络，就自动切换到其他的 greenlet，等到 IO 操作完成，再在适当的时候切换回来继续执行。由于 IO 操作非常耗时，经常使程序处于等待状态，有了 gevent 为我们自动切换协程，就保证总有 greenlet 在运行，而不是等待 IO。&lt;/p&gt;
&lt;p&gt;由于切换是在 IO 操作时自动完成，所以 gevent 需要修改 Python 自带的一些标准库，这一过程在启动时通过 &lt;code&gt;monkey patch&lt;/code&gt; 完成：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;from&lt;/span&gt; gevent &lt;span style="color:#f92672"&gt;import&lt;/span&gt; monkey; monkey&lt;span style="color:#f92672"&gt;.&lt;/span&gt;patch_socket()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; gevent
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;def&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;f&lt;/span&gt;(n):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; i &lt;span style="color:#f92672"&gt;in&lt;/span&gt; range(n):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; print gevent&lt;span style="color:#f92672"&gt;.&lt;/span&gt;getcurrent(), i
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;g1 &lt;span style="color:#f92672"&gt;=&lt;/span&gt; gevent&lt;span style="color:#f92672"&gt;.&lt;/span&gt;spawn(f, &lt;span style="color:#ae81ff"&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;g2 &lt;span style="color:#f92672"&gt;=&lt;/span&gt; gevent&lt;span style="color:#f92672"&gt;.&lt;/span&gt;spawn(f, &lt;span style="color:#ae81ff"&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;g3 &lt;span style="color:#f92672"&gt;=&lt;/span&gt; gevent&lt;span style="color:#f92672"&gt;.&lt;/span&gt;spawn(f, &lt;span style="color:#ae81ff"&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;g1&lt;span style="color:#f92672"&gt;.&lt;/span&gt;join()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;g2&lt;span style="color:#f92672"&gt;.&lt;/span&gt;join()
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;g3&lt;span style="color:#f92672"&gt;.&lt;/span&gt;join()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考：&lt;/p&gt;</description></item><item><title>字典</title><link>https://kingye.me/study-python/docs/basic/grammar/dict/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/dict/</guid><description>&lt;h1 id="字典"&gt;
 字典
 
 &lt;a class="anchor" href="#%e5%ad%97%e5%85%b8"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="遍历"&gt;
 遍历
 
 &lt;a class="anchor" href="#%e9%81%8d%e5%8e%86"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; key &lt;span style="color:#f92672"&gt;in&lt;/span&gt; d:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# For Python 3.x:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; key, value &lt;span style="color:#f92672"&gt;in&lt;/span&gt; d&lt;span style="color:#f92672"&gt;.&lt;/span&gt;items():
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# For Python 2.x:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;for&lt;/span&gt; key, value &lt;span style="color:#f92672"&gt;in&lt;/span&gt; d&lt;span style="color:#f92672"&gt;.&lt;/span&gt;iteritems():
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id="items"&gt;
 items
 
 &lt;a class="anchor" href="#items"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;The operation items() will work for both 2 and 3,
but in 2 it will return a list of the dictionary&amp;rsquo;s (key, value) pairs,
which will &lt;strong&gt;not&lt;/strong&gt; reflect changes to the dict that happen after the items() call.&lt;/p&gt;
&lt;p&gt;If you want the 2.x behavior in 3.x, you can call &lt;code&gt;list(d.items())&lt;/code&gt;&lt;/p&gt;</description></item><item><title>生成器</title><link>https://kingye.me/study-python/docs/basic/grammar/generator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/generator/</guid><description>&lt;h1 id="生成器"&gt;
 生成器
 
 &lt;a class="anchor" href="#%e7%94%9f%e6%88%90%e5%99%a8"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="iterable-可迭代的"&gt;
 iterable 可迭代的
 
 &lt;a class="anchor" href="#iterable-%e5%8f%af%e8%bf%ad%e4%bb%a3%e7%9a%84"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;Everything you can use &amp;ldquo;for&amp;hellip; in&amp;hellip;&amp;rdquo; on is an iterable; lists, strings, files&amp;hellip;&lt;/p&gt;
&lt;p&gt;iterable 包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;list&lt;/li&gt;
&lt;li&gt;tuple&lt;/li&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;dictionary&lt;/li&gt;
&lt;li&gt;file&lt;/li&gt;
&lt;li&gt;&lt;code&gt;enumerate object&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="iterator-迭代器"&gt;
 iterator 迭代器
 
 &lt;a class="anchor" href="#iterator-%e8%bf%ad%e4%bb%a3%e5%99%a8"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;iter() 函数用来生成迭代器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iter(object[, sentinel])&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;object：支持迭代的集合对象&lt;/li&gt;
&lt;li&gt;sentinel
&lt;ul&gt;
&lt;li&gt;如果传递了 sentinel，则 object 必须是一个可调用的对象（如函数），此时 iter 创建了一个迭代器对象&lt;/li&gt;
&lt;li&gt;每次调用这个迭代器对象的 &lt;code&gt;__next__()&lt;/code&gt; 方法时，都会调用 object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;迭代器只能迭代一次&lt;/p&gt;
&lt;p&gt;a kind of iterable you can only iterate over once.&lt;/p&gt;
&lt;h2 id="generator"&gt;
 generator
 
 &lt;a class="anchor" href="#generator"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;p&gt;Generators are iterators, a kind of iterable you can only iterate over once.
Generators do not store all the values in memory, they generate the values on the fly.&lt;/p&gt;</description></item><item><title>类</title><link>https://kingye.me/study-python/docs/basic/grammar/class/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/class/</guid><description>&lt;h1 id="类"&gt;
 类
 
 &lt;a class="anchor" href="#%e7%b1%bb"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h3 id="问答"&gt;
 问答
 
 &lt;a class="anchor" href="#%e9%97%ae%e7%ad%94"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;h4 id="class-后面加不加-object-的区别"&gt;
 class 后面加不加 object 的区别
 
 &lt;a class="anchor" href="#class-%e5%90%8e%e9%9d%a2%e5%8a%a0%e4%b8%8d%e5%8a%a0-object-%e7%9a%84%e5%8c%ba%e5%88%ab"&gt;#&lt;/a&gt;
 
&lt;/h4&gt;
&lt;p&gt;python 3 中已经默认就帮你加载了 object 了（即便你没有写上 object）&lt;/p&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;python 2.x&lt;/th&gt;
 &lt;th&gt;python 2.x&lt;/th&gt;
 &lt;th&gt;python 3.x&lt;/th&gt;
 &lt;th&gt;python 3.x&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;不含 object&lt;/td&gt;
 &lt;td&gt;含 object&lt;/td&gt;
 &lt;td&gt;不含 object&lt;/td&gt;
 &lt;td&gt;含 object&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;__doc__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__doc__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__doc__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__doc__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;code&gt;__module__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__module__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__module__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__module__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__class__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__class__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__class__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__delattr__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__delattr__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__delattr__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__dict__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__format__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__format__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__format__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__getattribute__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__getattribute__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__getattribute__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__hash__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__hash__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__hash__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__init__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__init__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__init__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__new__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__new__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__new__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__reduce__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__reduce__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__reduce__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__reduce_ex__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__reduce_ex__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__reduce_ex__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__repr__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__repr__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__repr__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__setattr__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__setattr__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__setattr__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__sizeof__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__sizeof__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__sizeof__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__str__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__str__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__str__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__subclasshook__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__subclasshook__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__subclasshook__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__weakref__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__weakref__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__weakref__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__dir__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__dir__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__eq__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__eq__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__ge__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__ge__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__gt__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__gt__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__le__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__le__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__lt__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__lt__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__ne__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__ne__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__init_subclass__&lt;/code&gt;&lt;/td&gt;
 &lt;td&gt;&lt;code&gt;__init_subclass__&lt;/code&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id="init_"&gt;
 &lt;strong&gt;init_subclass&lt;/strong&gt;
 
 &lt;a class="anchor" href="#init_"&gt;#&lt;/a&gt;
 
&lt;/h5&gt;
&lt;p&gt;类方法  &lt;code&gt;__init_subclass__&lt;/code&gt;  从  &lt;code&gt;3.6&lt;/code&gt; （&lt;a href="https://docs.python.org/3.6/whatsnew/3.6.html#pep-487-simpler-customization-of-class-creation"&gt;whatsnew3.6&lt;/a&gt;） 引入，作用是可以在不使用元类的情况下改变子类的行为。严格来说它不属于元类编程，但也能达到编辑其他类的一种手段。&lt;/p&gt;</description></item><item><title>装饰器</title><link>https://kingye.me/study-python/docs/basic/grammar/function/decorator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/grammar/function/decorator/</guid><description>&lt;h1 id="装饰器"&gt;
 装饰器
 
 &lt;a class="anchor" href="#%e8%a3%85%e9%a5%b0%e5%99%a8"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;p&gt;函数参数能够接收别的函数，就是&lt;strong&gt;高阶函数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;decorator 就是一个返回函数的高阶函数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-python" data-lang="python"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;import&lt;/span&gt; functools
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;def&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;log&lt;/span&gt;(text):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;def&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;decorator&lt;/span&gt;(func):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#a6e22e"&gt;@functools.wraps&lt;/span&gt;(func)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;def&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;wrapper&lt;/span&gt;(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;argc, &lt;span style="color:#f92672"&gt;**&lt;/span&gt;kw):
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; print(&lt;span style="color:#e6db74"&gt;&amp;#39;&lt;/span&gt;&lt;span style="color:#e6db74"&gt;%s&lt;/span&gt;&lt;span style="color:#e6db74"&gt; &lt;/span&gt;&lt;span style="color:#e6db74"&gt;%s&lt;/span&gt;&lt;span style="color:#e6db74"&gt;()&amp;#39;&lt;/span&gt; &lt;span style="color:#f92672"&gt;%&lt;/span&gt; (text, func&lt;span style="color:#f92672"&gt;.&lt;/span&gt;__name))
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; func(&lt;span style="color:#f92672"&gt;*&lt;/span&gt;args, &lt;span style="color:#f92672"&gt;**&lt;/span&gt;kw)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; wrapper
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#66d9ef"&gt;return&lt;/span&gt; decorator
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#a6e22e"&gt;@log&lt;/span&gt;(&lt;span style="color:#e6db74"&gt;&amp;#39;execute&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#66d9ef"&gt;def&lt;/span&gt; &lt;span style="color:#a6e22e"&gt;now&lt;/span&gt;():
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; print(&lt;span style="color:#e6db74"&gt;&amp;#39;2020-04-26&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description></item><item><title>4.3 关注项目</title><link>https://kingye.me/study-python/docs/appendix/attention/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/appendix/attention/</guid><description>&lt;h1 id="关注项目"&gt;
 关注项目
 
 &lt;a class="anchor" href="#%e5%85%b3%e6%b3%a8%e9%a1%b9%e7%9b%ae"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="web"&gt;
 Web
 
 &lt;a class="anchor" href="#web"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;h3 id="palletsflask-github-stars-github-forks-language-last-tag-last-commit"&gt;
 &lt;a href="https://github.com/pallets/flask"&gt;pallets/flask&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/pallets/flask.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/forks/pallets/flask.svg" alt="Github forks" /&gt; &lt;img src="https://img.shields.io/github/languages/top/pallets/flask.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/pallets/flask.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/pallets/flask.svg" alt="Last commit" /&gt;
 
 &lt;a class="anchor" href="#palletsflask-github-stars-github-forks-language-last-tag-last-commit"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;The Python micro framework for building web applications.&lt;/p&gt;
&lt;h3 id="djangodjango-github-stars-github-forks-language-last-tag-last-commit"&gt;
 &lt;a href="https://github.com/django/django"&gt;django/django&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/django/django.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/forks/django/django.svg" alt="Github forks" /&gt; &lt;img src="https://img.shields.io/github/languages/top/django/django.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/django/django.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/django/django.svg" alt="Last commit" /&gt;
 
 &lt;a class="anchor" href="#djangodjango-github-stars-github-forks-language-last-tag-last-commit"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;The Web framework for perfectionists with deadlines.&lt;/p&gt;
&lt;h3 id="tiangolofastapi-github-stars-github-forks-language-last-tag-last-commit"&gt;
 &lt;a href="https://github.com/tiangolo/fastapi"&gt;tiangolo/fastapi&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/tiangolo/fastapi.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/forks/tiangolo/fastapi.svg" alt="Github forks" /&gt; &lt;img src="https://img.shields.io/github/languages/top/tiangolo/fastapi.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/tiangolo/fastapi.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/tiangolo/fastapi.svg" alt="Last commit" /&gt;
 
 &lt;a class="anchor" href="#tiangolofastapi-github-stars-github-forks-language-last-tag-last-commit"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;FastAPI framework, high performance, easy to learn, fast to code, ready for production&lt;/p&gt;
&lt;h3 id="tornadowebtornado-github-stars-github-forks-language-last-tag-last-commit"&gt;
 &lt;a href="https://github.com/tornadoweb/tornado"&gt;tornadoweb/tornado&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/tornadoweb/tornado.svg" alt="Github stars" /&gt; &lt;img src="https://img.shields.io/github/forks/tornadoweb/tornado.svg" alt="Github forks" /&gt; &lt;img src="https://img.shields.io/github/languages/top/tornadoweb/tornado.svg" alt="Language" /&gt; &lt;img src="https://img.shields.io/github/v/tag/tornadoweb/tornado.svg?sort=semver" alt="Last Tag" /&gt; &lt;img src="https://img.shields.io/github/last-commit/tornadoweb/tornado.svg" alt="Last commit" /&gt;
 
 &lt;a class="anchor" href="#tornadowebtornado-github-stars-github-forks-language-last-tag-last-commit"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;p&gt;Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed.&lt;/p&gt;</description></item><item><title>3.7</title><link>https://kingye.me/study-python/docs/basic/other/version/3.7/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/version/3.7/</guid><description>&lt;h1 id="python-37"&gt;
 Python 3.7
 
 &lt;a class="anchor" href="#python-37"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;h2 id="安装"&gt;
 安装
 
 &lt;a class="anchor" href="#%e5%ae%89%e8%a3%85"&gt;#&lt;/a&gt;
 
&lt;/h2&gt;
&lt;h3 id="依赖"&gt;
 依赖
 
 &lt;a class="anchor" href="#%e4%be%9d%e8%b5%96"&gt;#&lt;/a&gt;
 
&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo yum install readline readline-devel readline-static -y
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo yum install openssl openssl-devel openssl-static -y
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo yum install sqlite-devel -y
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo yum install bzip2-devel bzip2-libs -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id="libffi-devel"&gt;
 libffi-devel
 
 &lt;a class="anchor" href="#libffi-devel"&gt;#&lt;/a&gt;
 
&lt;/h4&gt;
&lt;p&gt;3.7 版本需要一个新的包 libffi-devel，安装此包之后再次进行编译安装即可。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo yum install libffi-devel -y
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;make install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若在安装前移除了 &lt;code&gt;/usr/bin&lt;/code&gt; 下 python 的文件链接依赖，此时 &lt;code&gt;yum&lt;/code&gt; 无法正常使用，需要自己下载相关软件包安装，为节省读者时间，放上链接&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-shell" data-lang="shell"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;wget http://mirror.centos.org/centos/7/os/x86_64/Packages/libffi-devel-3.0.13-18.el7.x86_64.rpm
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;rpm -ivh libffi-devel-3.0.13-18.el7.x86_64.rpm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成后重新进行 &lt;code&gt;make install&lt;/code&gt;，结束后再次配置相关文件的软连接即可。&lt;/p&gt;
&lt;p&gt;解读：
python3 中有个内置模块叫 ctypes，它是 python3 的外部函数库模块，提供了兼容 C 语言的数据类型，并通过它调用 Linux 系统下的共享库 (Shared library)，此模块需要使用 centos7 系统中外部函数库 (Foreign function library) 的开发链接库 (头文件和链接库)。
由于在 centos7 系统中没有安装外部函数库 (libffi) 的开发链接库软件包，所以在安装 pip 的时候就报了 &amp;ldquo;ModuleNotFoundError: No module named &amp;lsquo;_ctypes&amp;rsquo;&amp;rdquo; 的错误。&lt;/p&gt;</description></item><item><title>Anaconda</title><link>https://kingye.me/study-python/docs/basic/other/anaconda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kingye.me/study-python/docs/basic/other/anaconda/</guid><description>&lt;h1 id="anaconda"&gt;
 Anaconda
 
 &lt;a class="anchor" href="#anaconda"&gt;#&lt;/a&gt;
 
&lt;/h1&gt;
&lt;p&gt;Anaconda 是一个&lt;a href="https://www.wikiwand.com/zh-cn/%E5%85%8D%E8%B4%B9"&gt;免费&lt;/a&gt;&lt;a href="https://www.wikiwand.com/zh-cn/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81"&gt;开源&lt;/a&gt; 的  &lt;a href="https://www.wikiwand.com/zh-cn/Python"&gt;Python&lt;/a&gt; 和  &lt;a href="https://www.wikiwand.com/zh-cn/R%E8%AF%AD%E8%A8%80"&gt;R 语言&lt;/a&gt;的发行版本，用于&lt;a href="https://www.wikiwand.com/zh-cn/%E8%AE%A1%E7%AE%97%E7%A7%91%E5%AD%A6"&gt;计算科学&lt;/a&gt;（&lt;a href="https://www.wikiwand.com/zh-cn/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6" title="数据科学"&gt;数据科学&lt;/a&gt;、&lt;a href="https://www.wikiwand.com/zh-cn/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0" title="机器学习"&gt;机器学习&lt;/a&gt;、&lt;a href="https://www.wikiwand.com/zh-cn/%E5%A4%A7%E6%95%B8%E6%93%9A" title="大数据"&gt;大数据处理&lt;/a&gt;和&lt;a href="https://www.wikiwand.com/zh-cn/%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90"&gt;预测分析&lt;/a&gt;），Anaconda 致力于简化&lt;a href="https://www.wikiwand.com/zh-cn/%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F"&gt;包管理&lt;/a&gt;和部署。&lt;/p&gt;
&lt;p&gt;Anaconda 的包使用&lt;a href="https://www.wikiwand.com/zh-cn/%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F"&gt;软件包管理系统&lt;/a&gt; &lt;a href="https://www.wikiwand.com/zh-cn/Conda" title="Conda"&gt;Conda&lt;/a&gt; 进行管理。&lt;/p&gt;</description></item></channel></rss>